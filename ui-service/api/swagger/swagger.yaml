swagger: "2.0"
info:
  title: Guardian API
  version: "1.0.0"
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
tags:
  -
    name: account
    description: Account API
  - 
    name: profile
    description: Profile API
  - 
    name: schema
    description: Schema API
  - 
    name: token
    description: Token API
  - 
    name: other
    description: Other API
  - 
    name: policy
    description: Policy API
paths:
  /api/account/current-user:
    get:
      tags:
        - account
      security:
      - Bearer: [] 
      description: Return current logged in user account
      responses:
        200:
          description: Current user account
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/account/register:
    post:
      tags:
        - account
      description: Register a new user account
      parameters:
        -
          in: body
          name: body
          description: Object that contain username and password fields
          required: true
          schema:
            $ref: "#/definitions/Creditnails"
      responses:
        200:
          description: Return user account
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/account/login:
    post:
      tags:
        - account
      description: Sign in user
      parameters:
        -
          in: body
          name: body
          description: Object that contains username and password fields
          required: true
          schema:
            $ref: "#/definitions/Creditnails"
      responses:
        200:
          description: Return user account
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/account/get-all-users:
    get:
      tags:
        - account
      deprecated: true
      description: Return all registered user accounts
      responses:
        200:
          description: Return all registered user accounts

  /api/profile/user-balance:
    get:
      tags:
        - profile
      description: Request hedera account balance
      security:
      - Bearer: []
      responses:
        200:
          description: Return hedera user balance for INSTALLER
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/profile/user-state:
    get:
      tags:
        - profile
      description: Reqquest logged in user state
      security:
      - Bearer: []
      responses:
        200:
          description: Return logged in user registaration state for role INSTALLER
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/profile:
    get:
      tags:
        - profile
      description: Request user account full profile
      security:
      - Bearer: []
      responses:
        200:
          description: Return user account prefile
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/profile/set-hedera-profile:
    post:
      tags:
        - profile
      description: Fill user account hedera creditnails
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contain user instance
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Return action result
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/profile/random-key:
    get:
      tags:
        - profile
      description: Generate random key
      security:
      - Bearer: []
      responses:
        200:
          description: Return random key for user
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/schema/create:
    post:
      tags:
        - schema
      description: Create new schema
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains valid schema
          required: true
          schema:
            $ref: "#/definitions/Schema"
      responses:
        200:
          description: Return action result
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/schema:
    get:
      tags:
        - schema
      description: Get all schemes
      security:
      - Bearer: []
      responses:
        200:
          description: Return all schemes
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/schema/import:
    post:
      tags:
        - schema    
      description: Import new schemes
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains schemes array
          required: true
          schema:
            $ref: "#/definitions/ImportSchema"
      responses:
        200:
          description: Return all schemes
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/schema/export:
    post:
      tags:
        - schema
      description: Export selected schemes
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains schemes ids
          required: true
          schema:
            $ref: "#/definitions/ExportSchema"
      responses:
        200:
          description: Object that contains schemes array
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/create:
    post:
      tags:
        - token
      description: Create new token
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains token information
          required: true
          schema:
            $ref: "#/definitions/Token"
      responses:
        200:
          description: Return array of all tokens
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens:
    get:
      tags:
        - token
      description: Request all tokens
      security:
      - Bearer: []
      responses:
        200:
          description: Return array of all tokens
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/user-tokens:
    get:
      tags:
        - token
      description: Request tokens for user
      security:
      - Bearer: []
      responses:
        200:
          description: Return array of tokens for user
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/associate:
    post:
      tags:
        - token
      description: Associate token
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains tokens ids for associate with users
          required: true
          schema:
            $ref: "#/definitions/TokenAssociate"
      responses:
        200:
          description: Associate token
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/all-users:
    get:
      tags:
        - token
      description: Request all users with role INSTALLER
      security:
      - Bearer: []
      responses:
        200:
          description: Return all users with role INSTALLER
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/associate-users:
    get:
      tags:
        - token
      description: Request user information for selected token
      security:
      - Bearer: []
      parameters:
        - 
          in: query
          name: tokenId
          schema:
            type: string
          required: true
          description: Token ID
        - 
          in: query
          name: username
          schema:
            type: string
          required: true
          description: Username
      responses:
        200:
          description: Return token information
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/user-kyc:
    post:
      tags:
        - token
      description: Set or unset kyc for selected user
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains actions that was applied to token
          required: true
          schema:
            $ref: "#/definitions/TokenAction"
      responses:
        200:
          description: Return token information
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/tokens/user-freeze:
    post:
      tags:
        - token
      description: Freeze or unfreeze token for user
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains actions for apply to token
          required: true
          schema:
            $ref: "#/definitions/TokenAction"
      responses:
        200:
          description: Return token information
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/root-balance:
    get:
      tags:
        - other
      description: Request authorized root authority balance
      security:
      - Bearer: []
      responses:
        200:
          description: Return authorized root authority balance
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/root-config:
    get:
      tags:
        - other
      description: Request authorized root authority address book, vc document and did document
      security:
      - Bearer: []
      responses:
        200:
          description: Return authorized root authority address book, vc document and did document
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/set-root-config:
    post:
      tags:
        - other
      description: Set hedera account for root authority and create address book
      security:
      - Bearer: []
      parameters:
        -
          in: body
          name: body
          description: Object that contains actions for apply to token
          required: true
          schema:
            $ref: "#/definitions/RootConfig"
      responses:
        200:
          description: Return operation result
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/get-vp-documents:
    get:
      tags:
        - other
      description: Request all vp documents
      security:
      - Bearer: []
      responses:
        200:
          description: Return array of vp documents
        403:
          description: Access denied
        500:
          description: Internal server error

  /api/search-documents:
    get:
      tags:
        - other
      description: Build chain from vp to root vc document
      parameters:
        - 
          in: query
          name: search
          schema:
            type: string
          required: true
          description: Hash or Id of vp document
      security:
      - Bearer: []
      responses:
        200:
          description: Return chain of vc and did documents
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/edit/{policyId}:
    get:
      tags:
        - policy
      description: Request full policy config
      parameters:
        - 
          in: path
          name: policyId
          schema:
            type: string
          required: true
          description: Selected policy id
      security:
      - Bearer: []
      responses:
        200:
          description: Return selected policy config
        403:
          description: Access denied
        500:
          description: Internal server error
    post:
      tags:
        - policy
      description: Update policy config
      parameters:
        - 
          in: path
          name: policyId
          schema:
            type: string
          required: true
          description: Selected policy id
        -
          in: body
          name: body
          description: Object that contains policy config
          required: true
          schema:
            $ref: "#/definitions/PolicyConfig"
      security:
      - Bearer: []
      responses:
        200:
          description: Return updated policy config
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/create:
    post:
      tags:
        - policy
      description: Create new policy
      parameters:
        -
          in: body
          name: body
          description: Object that contains policy config
          required: true
          schema:
            $ref: "#/definitions/PolicyConfig"
      security:
      - Bearer: []
      responses:
        200:
          description: Return array of all policies
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/publish/{policyId}:
    post:
      tags:
        - policy
      description: Publish selected policy
      parameters:
        - 
          in: path
          name: policyId
          schema:
            type: string
          required: true
          description: Selected policy id
      security:
      - Bearer: []
      responses:
        200:
          description: Return array of all policies
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/{policyId}:
    get:
      tags:
        - policy
      description: Request data from root policy block
      parameters:
        - 
          in: path
          name: policyId
          schema:
            type: string
          required: true
          description: Selected policy id
      security:
      - Bearer: []
      responses:
        200:
          description: Return data object from block
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/block/tag/{policyId}/{tag}:
    get:
      tags:
        - policy
      description: Request block id from policy by tag
      parameters:
        - 
          in: path
          name: policyId
          schema:
            type: string
          required: true
          description: Selected policy id
        - 
          in: path
          name: tag
          schema:
            type: string
          required: true
          description: Tag from selected policy
      security:
      - Bearer: []
      responses:
        200:
          description: Return block uuid
        403:
          description: Access denied
        500:
          description: Internal server error
          
  /policy/block/{uuid}:
    get:
      tags:
        - policy
      description: Request block data
      parameters:
        - 
          in: path
          name: uuid
          schema:
            type: string
          required: true
          description: Selected block uuid
      security:
      - Bearer: []
      responses:
        200:
          description: Return block response
        403:
          description: Access denied
        500:
          description: Internal server error
    post:
      tags:
        - policy
      description: Send data to block
      parameters:
        - 
          in: path
          name: uuid
          schema:
            type: string
          required: true
          description: Selected block uuid
        -
          in: body
          name: body
          description: Object with data that block need to recieve
          required: true
          schema:
            type: object
      security:
      - Bearer: []
      responses:
        200:
          description: Return block response
        403:
          description: Access denied
        500:
          description: Internal server error
          
definitions:
  Creditnails:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        
  User:
    type: object
    properties:
      username:
        type: string
      hederaAccountId:
        type: string
      hederaAccountKey:
        type: string
        
  Schema:
    type: object
    properties:
      document: 
        type: string
      entity:
        type: string
      hash:
        type: string
      name:
        type: string
      uuid:
        type: string
        
  ImportSchema:
    type: object
    properties:
      schemes:
        type: array
        items:
          type: object
          properties:
            document: 
              type: string
            entity:
              type: string
            hash:
              type: string
            name:
              type: string
            uuid:
              type: string
              
  ExportSchema:
    type: object
    properties:
      ids:
        type: array
        items:
          type: string
          
  Token:
    type: object
    properties:
      changeSupply:
        type: boolean
      decimals:
        type: string
      enableAdmin:
        type: boolean
      enableFreeze:
        type: boolean
      enableKYC:
        type: boolean
      enableWipe:
        type: boolean
      initialSupply:
        type: string
      tokenName:
        type: string
      tokenSymbol:
        type: string
      tokenType:
        type: string
        
  TokenAssociate:
    type: object
    properties:
      tokenId:
        type: string
      associated:
        type: boolean
        
  TokenAction:
    type: object
    properties:
      tokenId:
        type: string
      username:
        type: string
      value:
        type: boolean
        
  RootConfig:
    type: object
    properties:
      appnetName:
        type: string
      didServerUrl:
        type: string
      didTopicMemo:
        type: string
      hederaAccountId:
        type: string
      hederaAccountKey:
        type: string
      vc:
        type: object
        properties:
          name:
            type: string
          "type":
            type: string
          "@context":
            type: string
      vcTopicMemo:
        type: string
        
  PolicyConfig:
    type: object
    properties:
      name:
        type: string
      version:
        type: string
      description:
        type: string
      topicDescription:
        type: string
      config:
        type: object
      status:
        type: string
      owner:
        type: string
      policyPoles:
        type: array
        items:
          type: string
      topicId:
        type: string
      policyTag:
        type: string
    
